#!/bin/bash
# Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"). You
# may not use this file except in compliance with the License. A copy of
# the License is located at
#
# 	http://aws.amazon.com/apache2.0/
#
# or in the "license" file accompanying this file. This file is
# distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
# ANY KIND, either express or implied. See the License for the specific
# language governing permissions and limitations under the License.
#
# The script is to upload linux images used by integration tests and functional
# tests to ECR

set -ex

# This script is being skipped because it is part of a deprecated codebuild
# path. Since it relies on pulling from dockerhub, it could fail our build steps
# even though it is not necessary. This script can be deleted completely when
# our github hook code is deprecated.
exit 0

NAMESPACE="linux"
REGION=$1
REPOSITORY=$2
PREFIX="${REPOSITORY}/${NAMESPACE}"
echo "${PREFIX}"

if [ -z "${REGION}" ] \
    || [ -z "${REPOSITORY}" ]; then
    echo "Needs to input REGION and REPOSITORY"
    exit 1
fi

mirror_image() {
  docker pull $1
  mirror_local_image $@
}

mirror_local_image() {
  docker tag $1 $2
  docker push $2
  docker rmi $2
}

if [ "${REGION}" == "cn-north-1" ] || [ "${REGION}" == "cn-northwest-1" ]; then
  export AWS_ACCESS_KEY_ID=${ACCESS_KEY}
  export AWS_SECRET_ACCESS_KEY=${SECRET_KEY}
  export AWS_DEFAULT_REGION=${REGION}
fi

ECR_ROLE_IMAGE="executionrole"

BUSYBOX_IMAGE="busybox:1.32.0"
NGINX_IMAGE="nginx:stable"
PYTHON2_IMAGE="python:2.7.15"
UBUNTU_IMAGE="ubuntu:20.04"

$(aws ecr get-login --region ${AWS_DEFAULT_REGION} --no-include-email)

for image in "amazon-ecs-netkitten" "amazon-ecs-volumes-test" "image-cleanup-test-image1" "image-cleanup-test-image2" "image-cleanup-test-image3" "fluentd" "amazon-ecs-telemetry-test" "amazon-ecs-containerhealthcheck" "amazon-ecs-exec-command-agent-test"; do
  # Create the repository if it does not exist
  if ! aws ecr describe-repositories --region ${AWS_DEFAULT_REGION}| grep -q "repositoryName\": \"${NAMESPACE}/${image}" ;
  then
      aws ecr create-repository --region ${AWS_DEFAULT_REGION} --repository-name "${NAMESPACE}/${image}"
  fi
  mirror_local_image "amazon/${image}:make" "${PREFIX}/${image}:latest"
done


for image in "executionrole" "busybox" "nginx" "python" "ubuntu" "debian" "httpd" "redis" "registry"; do
  # Create the repository if it does not exist
  if ! aws ecr describe-repositories --region ${AWS_DEFAULT_REGION}| grep -q "repositoryName\": \"${NAMESPACE}/${image}" ;
  then
      aws ecr create-repository --region ${AWS_DEFAULT_REGION} --repository-name "${NAMESPACE}/${image}"
  fi
done

mirror_local_image "amazon/${ECR_ROLE_IMAGE}:fts" "${PREFIX}/${ECR_ROLE_IMAGE}:fts"
mirror_image ${BUSYBOX_IMAGE} "${PREFIX}/busybox:latest"
mirror_image ${NGINX_IMAGE} "${PREFIX}/nginx:latest"
mirror_image ${PYTHON2_IMAGE} "${PREFIX}/python:2"
mirror_image ${UBUNTU_IMAGE} "${PREFIX}/ubuntu:latest"


# Remove the tag so this image can be deleted successfully in the docker image cleanup integ tests
docker rmi amazon/image-cleanup-test-image1:make
docker rmi amazon/image-cleanup-test-image2:make
docker rmi amazon/image-cleanup-test-image3:make
