#! /bin/bash

# Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the
# "License"). You may not use this file except in compliance
#  with the License. A copy of the License is located at
#
#     http://aws.amazon.com/apache2.0/
#
# or in the "license" file accompanying this file. This file is
# distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and
# limitations under the License.
set -e

dir=$(dirname "${BASH_SOURCE[0]}")
source "$dir/ci-ecr"

AWS_REGION="${1}"
AWS_ACCOUNT_ID="${2}"

usage() {
    cat <<EOF
Usage: ${0} AWS_REGION AWS_ACCOUNT_ID

This script attempts to pull the following images from dockerhub locally and then
push them to an ECR repo:

$IMAGES

It pushes them to an ECR repo named like:

AWS_ACCOUNT_ID.dkr.ecr.AWS_REGION.amazonaws.com/ci/IMAGE_OS/IMAGE_ARCH/IMAGE_NAME

(see ci-ecr-pull for pulling these instead of docker)
EOF
}

if [ -z "$AWS_REGION" ]; then
    usage
    exit 1
fi

if [ -z "$AWS_ACCOUNT_ID" ]; then
    usage
    exit 1
fi

ECR_URI="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"

aws --region "$AWS_REGION" ecr get-login-password | docker login --username AWS --password-stdin "$ECR_URI"

for image in $IMAGES; do
    docker pull "$image"
    repotag=(${image//:/ })
    repo="${repotag[0]}"
    tag="${repotag[1]}"
    imageOS=$(docker image inspect "$image" --format "{{.Os}}")
    imageArch=$(docker image inspect "$image" --format "{{.Architecture}}")

    fullRepoName="ci/$imageOS/$imageArch/$repo"
    if ! aws --region "$AWS_REGION" ecr describe-repositories --repository-names "$fullRepoName" &>/dev/null; then
        aws --region "$AWS_REGION" ecr create-repository --repository-name "$fullRepoName"
        echo "CREATED $ECR_URI/$fullRepoName"
    fi

    docker tag "$image" "$ECR_URI/$fullRepoName:$tag"
    docker push "$ECR_URI/$fullRepoName:$tag"
    echo "PUSHED $ECR_URI/$fullRepoName:$tag"
done
