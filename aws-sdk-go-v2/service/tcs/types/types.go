// Code generated by smithy-go-codegen DO NOT EDIT.


package types

import (
	smithydocument "github.com/aws/smithy-go/document"
	"time"
)

type ContainerHealth struct {
	
	ContainerName *string
	
	HealthStatus HealthStatus
	
	StatusMessage *string
	
	StatusSince *time.Time
	
	noSmithyDocumentSerde
}

type ContainerMetric struct {
	
	ContainerArn *string
	
	ContainerName *string
	
	CpuStatsSet *CWStatsSet
	
	MemoryStatsSet *CWStatsSet
	
	// A set of stats that cover the aggregate of several network interfaces used by a
	// container. Stats are in bytes due to the same unit being used in Docker.
	NetworkStatsSet *NetworkStatsSet
	
	// A set of stats that cover the container restart metrics.
	RestartStatsSet *RestartStatsSet
	
	// A set of stats that cover the aggregate of several storage devices used by a
	// container. Stats are in bytes due to the same unit being used in Docker.
	StorageStatsSet *StorageStatsSet
	
	noSmithyDocumentSerde
}

type CWStatsSet struct {
	
	Max float64
	
	Min float64
	
	SampleCount int32
	
	Sum float64
	
	noSmithyDocumentSerde
}

type Dimension struct {
	
	Key *string
	
	Value *string
	
	noSmithyDocumentSerde
}

type EphemeralStorageMetrics struct {
	
	BytesUtilized *ULongStatsSet
	
	noSmithyDocumentSerde
}

type GeneralMetric struct {
	
	MetricCounts []int64
	
	MetricName *string
	
	MetricValues []float64
	
	noSmithyDocumentSerde
}

type GeneralMetricsWrapper struct {
	
	Dimensions []Dimension
	
	GeneralMetrics []GeneralMetric
	
	MetricType MetricType
	
	noSmithyDocumentSerde
}

// HealthMetadata is used while sending a PublishHealthRequest to set metadata for
// the request. The cluster and containerInstance fields are expected to remain
// unchanged during the course of a session.
//
// In situations where the session is used to send data for multiple customer
// clusters, the cluster field should represent the infrastructure cluster, and the
// containInstance field should represent the infrastructure container instance.
// Furthermore, the clusterArn field in the TaskHealth structure must be passed in.
type HealthMetadata struct {
	
	Cluster *string
	
	ContainerInstance *string
	
	Fin bool
	
	MessageId *string
	
	noSmithyDocumentSerde
}

// InstanceMetrics defines the set of metrics that would be published for resource
// usage on the instance.
type InstanceMetrics struct {
	
	// InstanceStorageMetrics defines the set of metrics that represent the filesystem
	// utilization of the container instance. Every container instance will have a
	// filesystem to back the operating system and optionally contain another
	// filesystem to back the container data storage, including containers' writeable
	// layers, contents of container images, ephemeral bind-mounts etc. The former is
	// captured by 'OSFilesystem' and the latter by 'DataFilesystem'.
	Storage *InstanceStorageMetrics
	
	noSmithyDocumentSerde
}

// InstanceStatus is provided for use by the Madison Health Service.
type InstanceStatus struct {
	
	LastStatusChange *time.Time
	
	LastUpdated *time.Time
	
	Status InstanceHealthcheckStatus
	
	Type *string
	
	noSmithyDocumentSerde
}

// InstanceStatusMetadata is used while sending a PublishInstanceStatusRequest to
// set metadata for the request. The cluster and containerInstance fields are
// expected to remain unchanged during the course of a session.
//
// requestId is for logging purposes.
type InstanceStatusMetadata struct {
	
	Cluster *string
	
	ContainerInstance *string
	
	RequestId *string
	
	noSmithyDocumentSerde
}

// InstanceStorageMetrics defines the set of metrics that represent the filesystem
// utilization of the container instance. Every container instance will have a
// filesystem to back the operating system and optionally contain another
// filesystem to back the container data storage, including containers' writeable
// layers, contents of container images, ephemeral bind-mounts etc. The former is
// captured by 'OSFilesystem' and the latter by 'DataFilesystem'.
type InstanceStorageMetrics struct {
	
	DataFilesystem float64
	
	OSFilesystem float64
	
	noSmithyDocumentSerde
}

// MetricsMetadata is used while sending a PublishMetricsRequest to set metadata
// for the request. The cluster and containerInstance fields are expected to remain
// unchanged during the course of a session. The idle field indicates if the
// container instance is idle, which is to indicate that there are no running tasks
// on the instance. Incorrectly setting this to true when there are task metrics in
// the payload will result in an error.
//
// In situations where the session is used to send data for multiple customer
// clusters, the cluster field should represent the infrastructure cluster, and the
// containInstance field should represent the infrastructure container instance.
// Furthermore, the clusterArn field in the TaskMetrics structure must be passed
// in.
type MetricsMetadata struct {
	
	Cluster *string
	
	ContainerInstance *string
	
	Fin bool
	
	Idle bool
	
	MessageId *string
	
	noSmithyDocumentSerde
}

// A set of stats that cover the aggregate of several network interfaces used by a
// container. Stats are in bytes due to the same unit being used in Docker.
type NetworkStatsSet struct {
	
	RxBytes *ULongStatsSet
	
	RxBytesPerSecond *UDoubleCWStatsSet
	
	RxDropped *ULongStatsSet
	
	RxErrors *ULongStatsSet
	
	RxPackets *ULongStatsSet
	
	TxBytes *ULongStatsSet
	
	TxBytesPerSecond *UDoubleCWStatsSet
	
	TxDropped *ULongStatsSet
	
	TxErrors *ULongStatsSet
	
	TxPackets *ULongStatsSet
	
	noSmithyDocumentSerde
}

// A set of stats that cover the container restart metrics.
type RestartStatsSet struct {
	
	RestartCount int32
	
	noSmithyDocumentSerde
}

// A set of stats that cover the aggregate of several storage devices used by a
// container. Stats are in bytes due to the same unit being used in Docker.
type StorageStatsSet struct {
	
	ReadSizeBytes *ULongStatsSet
	
	WriteSizeBytes *ULongStatsSet
	
	noSmithyDocumentSerde
}

// TaskHealth is provided for use by the Health Service. The clusterArn field is
// expected to be provided if the session is used to send data for multiple
// customer clusters, such as in the case of Fargate on Firecracker.
type TaskHealth struct {
	
	ClusterArn *string
	
	Containers []ContainerHealth
	
	TaskArn *string
	
	TaskDefinitionFamily *string
	
	TaskDefinitionVersion *string
	
	noSmithyDocumentSerde
}

// TaskMetric is used to provide customer facing metrics. The clusterArn field is
// expected to be provided if the Agent in question is sending data for multiple
// customer clusters, such as in the case of Fargate on Firecracker.
type TaskMetric struct {
	
	ClusterArn *string
	
	ContainerMetrics []ContainerMetric
	
	EphemeralStorageMetrics *EphemeralStorageMetrics
	
	ServiceConnectMetricsWrapper []GeneralMetricsWrapper
	
	TaskArn *string
	
	TaskDefinitionFamily *string
	
	TaskDefinitionVersion *string
	
	VolumeMetrics []VolumeMetric
	
	noSmithyDocumentSerde
}

type UDoubleCWStatsSet struct {
	
	// This member is required.
	Max float64
	
	// This member is required.
	Min float64
	
	// This member is required.
	SampleCount int32
	
	// This member is required.
	Sum float64
	
	noSmithyDocumentSerde
}

type ULongStatsSet struct {
	
	// This member is required.
	Max int64
	
	// This member is required.
	Min int64
	
	// This member is required.
	SampleCount int64
	
	// This member is required.
	Sum int64
	
	OverflowMax int64
	
	OverflowMin int64
	
	OverflowSum int64
	
	noSmithyDocumentSerde
}

type VolumeMetric struct {
	
	Size *UDoubleCWStatsSet
	
	Utilized *UDoubleCWStatsSet
	
	VolumeId *string
	
	VolumeName *string
	
	noSmithyDocumentSerde
}

type noSmithyDocumentSerde = smithydocument.NoSerde
