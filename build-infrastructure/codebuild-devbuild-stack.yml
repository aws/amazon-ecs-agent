AWSTemplateFormatVersion: 2010-09-09
Description: A Cloudformation template to build Agent artifacts on PR creation, modification, and merges. It spawns CodeBuild projects for different architectures which trigger agent artifact builds for PR creation, modification, and merges, and store the artifacts in an S3 bucket.

Parameters:
  GithubFullRepoName:
    Type: String
    Description: Full name of the agent repository to use (e.g. https://github.com/aws/amazon-ecs-agent.git)
  GithubBranchName:
    Type: String
    Description: Name of the base branch to use to build, PRs to which will trigger builds (e.g. refs/heads/dev)
  BuildBucketName:
    Type: String
    Description: Name of the S3 bucket which will store artifacts
  BuildBucketArn:
    Type: String
    Description: ARN of the S3 bucket which will store artifacts
  BuildProjectName:
    Type: String
    Description: Base name of CodeBuild projects - will start different CodeBuild projects with different suffixes (-amd, -arm) for different artifacts

Resources:
  UbuntuAmdProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        EncryptionDisabled: true
        Location: !Ref BuildBucketName
        NamespaceType: NONE
        OverrideArtifactName: true
        Packaging: NONE
        Path: development
        Type: S3
      BadgeEnabled: false
      ConcurrentBuildLimit: 10
      Description: A CodeBuild project to build artifacts (AMD/x86_64). Builds are triggered by PR creation, updates, and merges, and artifacts are saved in S3
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'public.ecr.aws/lts/ubuntu:20.04'
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: LINUX_CONTAINER
      Name: !Sub '${BuildProjectName}-ubuntu-amd'
      QueuedTimeoutInMinutes: 60
      ServiceRole: !Ref ServiceRoleUbuntuAmd
      Source:
        BuildSpec: buildspecs/pr-build-ubuntu.yml
        Location: !Ref GithubFullRepoName
        Type: GITHUB
      TimeoutInMinutes: 60
      Visibility: PRIVATE
  UbuntuArmProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        EncryptionDisabled: true
        Location: !Ref BuildBucketName
        NamespaceType: NONE
        OverrideArtifactName: true
        Packaging: NONE
        Path: development
        Type: S3
      BadgeEnabled: false
      ConcurrentBuildLimit: 10
      Description: A CodeBuild project to build artifacts (ARM). Builds are triggered by PR creation, updates, and merges, and artifacts are saved in S3
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'public.ecr.aws/lts/ubuntu:20.04'
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: false
        Type: ARM_CONTAINER
      Name: !Sub '${BuildProjectName}-ubuntu-arm'
      QueuedTimeoutInMinutes: 60
      ServiceRole: !Ref ServiceRoleUbuntuArm
      Source:
        BuildSpec: buildspecs/pr-build-ubuntu.yml
        Location: !Ref GithubFullRepoName
        Type: GITHUB
      TimeoutInMinutes: 60
      Visibility: PRIVATE
  ArmProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        EncryptionDisabled: true
        Location: !Ref BuildBucketName
        NamespaceType: NONE
        OverrideArtifactName: true
        Packaging: NONE
        Path: development
        Type: S3
      BadgeEnabled: false
      ConcurrentBuildLimit: 10
      Description: A CodeBuild project to build artifacts (ARM). Builds are triggered by PR creation, updates, and merges, and artifacts are saved in S3
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/amazonlinux2-aarch64-standard:3.0'
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: ARM_CONTAINER
      Name: !Sub '${BuildProjectName}-arm'
      QueuedTimeoutInMinutes: 60
      ServiceRole: !Ref ServiceRoleArm
      Source:
        BuildSpec: buildspecs/pr-build.yml
        Location: !Ref GithubFullRepoName
        Type: GITHUB
      TimeoutInMinutes: 60
      Visibility: PRIVATE
  AmdProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        EncryptionDisabled: true
        Location: !Ref BuildBucketName
        NamespaceType: NONE
        OverrideArtifactName: true
        Packaging: NONE
        Path: development
        Type: S3
      BadgeEnabled: false
      ConcurrentBuildLimit: 10
      Description: A CodeBuild project to build artifacts (AMD/x86_64). Builds are triggered by PR creation, updates, and merges, and artifacts are saved in S3
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/amazonlinux2-x86_64-standard:5.0'
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Name: !Sub '${BuildProjectName}-amd'
      QueuedTimeoutInMinutes: 60
      ServiceRole: !Ref ServiceRoleAmd
      Source:
        BuildSpec: buildspecs/pr-build.yml
        Location: !Ref GithubFullRepoName
        Type: GITHUB
      TimeoutInMinutes: 60
      Visibility: PRIVATE

  # Creates a CodeBuild project for Amazon Linux 2 ARM    
  Amzn2ArmProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        EncryptionDisabled: true
        Location: !Ref BuildBucketName
        NamespaceType: NONE
        OverrideArtifactName: true
        Packaging: NONE
        Path: development
        Type: S3
      BadgeEnabled: false
      ConcurrentBuildLimit: 10
      Description: A CodeBuild project to build artifacts (ARM) on Amazon Linux 2. Builds are triggered by PR creation, updates, and merges, and artifacts are saved in S3.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/amazonlinux2-aarch64-standard:2.0'
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: ARM_CONTAINER
      Name: !Sub '${BuildProjectName}-amzn2-arm'
      QueuedTimeoutInMinutes: 60
      ServiceRole: !Ref ServiceRoleAmzn2Arm
      Source:
        BuildSpec: buildspecs/pr-build-amzn.yml
        Location: !Ref GithubFullRepoName
        Type: GITHUB
      TimeoutInMinutes: 60
      Visibility: PRIVATE

  # Creates a CodeBuild project for Amazon Linux 2 AMD
  Amzn2AmdProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        EncryptionDisabled: true
        Location: !Ref BuildBucketName
        NamespaceType: NONE
        OverrideArtifactName: true
        Packaging: NONE
        Path: development
        Type: S3
      BadgeEnabled: false
      ConcurrentBuildLimit: 10
      Description: A CodeBuild project to build artifacts (AMD/x86_64) on Amazon Linux 2. Builds are triggered by PR creation, updates, and merges, and artifacts are saved in S3.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/amazonlinux2-x86_64-standard:4.0'
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Name: !Sub '${BuildProjectName}-amzn2-amd'
      QueuedTimeoutInMinutes: 60
      ServiceRole: !Ref ServiceRoleAmzn2Amd
      Source:
        BuildSpec: buildspecs/pr-build-amzn.yml
        Location: !Ref GithubFullRepoName
        Type: GITHUB
      TimeoutInMinutes: 60
      Visibility: PRIVATE

  # Creates a CodeBuild project for Amazon Linux 2023 ARM
  Amzn2023ArmProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        EncryptionDisabled: true
        Location: !Ref BuildBucketName
        NamespaceType: NONE
        OverrideArtifactName: true
        Packaging: NONE
        Path: development
        Type: S3
      BadgeEnabled: false
      ConcurrentBuildLimit: 10
      Description: A CodeBuild project to build artifacts (ARM) on Amazon-Linux 2023. Builds are triggered by PR creation, updates, and merges, and artifacts are saved in S3.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/amazonlinux2-aarch64-standard:3.0'
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: ARM_CONTAINER
      Name: !Sub '${BuildProjectName}-amzn2023-arm'
      QueuedTimeoutInMinutes: 60
      ServiceRole: !Ref ServiceRoleAmzn2023Arm
      Source:
        BuildSpec: buildspecs/pr-build-amzn.yml
        Location: !Ref GithubFullRepoName
        Type: GITHUB
      TimeoutInMinutes: 60
      Visibility: PRIVATE

  # Creates a CodeBuild project for Amazon Linux 2023 AMD
  Amzn2023AmdProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        EncryptionDisabled : true
        Location: !Ref BuildBucketName
        NamespaceType: NONE
        OverrideArtifactName: true
        Packaging: NONE
        Path: development
        Type: S3
      BadgeEnabled: false
      ConcurrentBuildLimit: 10
      Description: A CodeBuild project to build artifacts (AMD/x86_64) on Amazon-Linux 2023. Builds are triggered by PR creation, updates, and merges, and artifacts are saved in S3.
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/amazonlinux2-x86_64-standard:5.0'
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Name: !Sub '${BuildProjectName}-amzn2023-amd'
      QueuedTimeoutInMinutes: 60
      ServiceRole: !Ref ServiceRoleAmzn2023Amd
      Source:
        BuildSpec: buildspecs/pr-build-amzn.yml
        Location: !Ref GithubFullRepoName
        Type: GITHUB
      TimeoutInMinutes: 60
      Visibility: PRIVATE     
  
  # Defines the service roles for the CodeBuild projects
  ServiceRoleAmd:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Description: Service role, allow access to CW and S3
      Path: /
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProjectName}-amd"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProjectName}-amd:*"
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
              - Effect: Allow
                Resource:
                  - 'arn:aws:s3:::codepipeline-us-west-2-*'
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
              - Effect: Allow
                Resource:
                  - !Sub '${BuildBucketArn}/*'
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
          PolicyName: !Sub '${AWS::StackName}-ServicePolicyAmd'
      RoleName: !Sub '${AWS::StackName}-ServiceRoleAmd'   
  ServiceRoleUbuntuAmd:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Description: Service role, allow access to CW and S3
      Path: /
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProjectName}-ubuntu-amd"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProjectName}-ubuntu-amd:*"
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
              - Effect: Allow
                Resource:
                  - 'arn:aws:s3:::codepipeline-us-west-2-*'
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
              - Effect: Allow
                Resource:
                  - !Sub '${BuildBucketArn}/*'
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
          PolicyName: !Sub '${AWS::StackName}-ServicePolicyUbuntuAmd'
      RoleName: !Sub '${AWS::StackName}-ServiceRoleUbuntuAmd'
  ServiceRoleArm:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Description: Service role, allow access to CW and S3
      Path: /
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProjectName}-arm"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProjectName}-arm:*"
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
              - Effect: Allow
                Resource:
                  - 'arn:aws:s3:::codepipeline-us-west-2-*'
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
              - Effect: Allow
                Resource:
                  - !Sub '${BuildBucketArn}/*'
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
          PolicyName: !Sub '${AWS::StackName}-ServicePolicyArm'
      RoleName: !Sub '${AWS::StackName}-ServiceRoleArm'
  ServiceRoleUbuntuArm:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Description: Service role, allow access to CW and S3
      Path: /
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProjectName}-ubuntu-arm"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProjectName}-ubuntu-arm:*"
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
              - Effect: Allow
                Resource:
                  - 'arn:aws:s3:::codepipeline-us-west-2-*'
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
              - Effect: Allow
                Resource:
                  - !Sub '${BuildBucketArn}/*'
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
          PolicyName: !Sub '${AWS::StackName}-ServicePolicyUbuntuArm'
      RoleName: !Sub '${AWS::StackName}-ServiceRoleUbuntuArm'   
  ServiceRoleAmzn2Arm:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Description: Service role, allow access to CW and S3
      Path: /
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProjectName}-amzn2-arm"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProjectName}-amzn2-arm:*"
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
              - Effect: Allow
                Resource:
                  - 'arn:aws:s3:::codepipeline-us-west-2-*'
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
              - Effect: Allow
                Resource:
                  - !Sub '${BuildBucketArn}/*'
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
          PolicyName: !Sub '${AWS::StackName}-ServicePolicyAmzn2Arm'
      RoleName: !Sub '${AWS::StackName}-ServiceRoleAmzn2Arm'
  ServiceRoleAmzn2Amd:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Description: Service role, allow access to CW and S3
      Path: /
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProjectName}-amzn2-amd"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProjectName}-amzn2-amd:*"
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
              - Effect: Allow
                Resource:
                  - 'arn:aws:s3:::codepipeline-us-west-2-*'
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
              - Effect: Allow
                Resource:
                  - !Sub '${BuildBucketArn}/*'
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
          PolicyName: !Sub '${AWS::StackName}-ServicePolicyAmzn2Amd'
      RoleName: !Sub '${AWS::StackName}-ServiceRoleAmzn2Amd'
  ServiceRoleAmzn2023Arm:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Description: Service role, allow access to CW and S3
      Path: /
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProjectName}-amzn2023-arm"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProjectName}-amzn2023-arm:*"
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
              - Effect: Allow
                Resource:
                  - 'arn:aws:s3:::codepipeline-us-west-2-*'
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
              - Effect: Allow
                Resource:
                  - !Sub '${BuildBucketArn}/*'
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
          PolicyName: !Sub '${AWS::StackName}-ServicePolicyAmzn2023Arm'
      RoleName: !Sub '${AWS::StackName}-ServiceRoleAmzn2023Arm'
  ServiceRoleAmzn2023Amd:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      Description: Service role, allow access to CW and S3
      Path: /
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProjectName}-amzn2023-amd"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProjectName}-amzn2023-amd:*"
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
              - Effect: Allow
                Resource:
                  - 'arn:aws:s3:::codepipeline-us-west-2-*'
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
              - Effect: Allow
                Resource:
                  - !Sub '${BuildBucketArn}/*'
                Action:
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
          PolicyName: !Sub '${AWS::StackName}-ServicePolicyAmzn2023Amd'
      RoleName: !Sub '${AWS::StackName}-ServiceRoleAmzn2023Amd'
