// +build windows

// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//	http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

package ecscni

import (
	"fmt"
	"strings"

	"github.com/containernetworking/cni/pkg/types"

	"github.com/aws/amazon-ecs-agent/agent/api/eni"
	"github.com/containernetworking/cni/libcni"
	"github.com/pkg/errors"
)

// NewBridgeNetworkConfigForTaskNSSetup is used to create the bridge configuration for task namespace setup
func NewBridgeNetworkConfigForTaskNSSetup(eni *eni.ENI, cfg *Config) (*libcni.NetworkConfig, error) {
	// There is no prefix length for ENI's IP Address whereas vpc-shared-eni plugin expects a prefix length.
	// SubnetGatewayIPV4Address has a prefix length while vpc-shared-eni plugin does not expect a prefix length.
	subnet := strings.Split(eni.SubnetGatewayIPV4Address, "/")
	ipv4Addr := eni.GetPrimaryIPv4Address() + "/" + subnet[1]
	eniGatewayIPAddress := subnet[0]

	dns := types.DNS{
		Nameservers: eni.DomainNameServers,
	}
	if len(eni.DomainNameServers) == 0 {
		constructedDNS, err := constructDNSFromVPCGateway(subnet[0])
		if err != nil {
			return nil, errors.Wrapf(err, "cannot create bridge network config")
		}
		dns.Nameservers = constructedDNS
	}

	eniConf := BridgeForTaskENIConfig{
		Type:             ECSVPCSharedENIPluginName,
		ENIIPAddress:     ipv4Addr,
		ENIMACAddress:    eni.MacAddress,
		GatewayIPAddress: eniGatewayIPAddress,
		IPAddress:        ipv4Addr,
		TaskENI:          true,
		DNS:              dns,
	}

	pluginName := fmt.Sprintf("%s.exe", ECSVPCSharedENIPluginName)
	networkConfig, err := newNetworkConfig(eniConf, pluginName, cfg.MinSupportedCNIVersion)
	if err != nil {
		return nil, errors.Wrap(err, "cni config: failed to create bridge plugin configuration for setting up task namespace")
	}

	// Network.Name is used to create the name of the task bridge network.
	// The bridge name generated by the plugin would be of format taskbr<ENI MAC Address>
	networkConfig.Network.Name = taskENIBridgeNetworkPrefix

	return networkConfig, nil
}

// constructDNSFromVPCGateway is used to construct DNS server from subnet gateway address
func constructDNSFromVPCGateway(subnetGateway string) ([]string, error) {
	tokens := strings.Split(subnetGateway, ".")

	if len(tokens) < 4 {
		return nil, errors.New("failed to construct dns from gateway address")
	}

	tokens[3] = "2"
	return []string{strings.Join(tokens, ".")}, nil
}
