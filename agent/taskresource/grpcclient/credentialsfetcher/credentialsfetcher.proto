//command to generate gRPC code
//protoc --go_out=. --go_opt=paths=source_relative \
//--go-grpc_out=. --go-grpc_opt=paths=source_relative credentialsfetcher/credentialsfetcher.proto
// This will generate credentialsfetcher/credentialsfetcher.pb.go and credentialsfetcher/credentialsfetcher_grpc.pb.go files
syntax = "proto3";

option go_package = "grpcclient/credentialsfetcher";
package credentialsfetcher;

service CredentialsFetcherService {
  rpc AddKerberosLease (CreateKerberosLeaseRequest) returns (CreateKerberosLeaseResponse);
  rpc DeleteKerberosLease (DeleteKerberosLeaseRequest) returns (DeleteKerberosLeaseResponse);
}

message CreateKerberosLeaseRequest {
  repeated string credspec_contents = 1;
}

message CreateKerberosLeaseResponse {
  string lease_id = 1;
  repeated string created_kerberos_file_paths = 2;
}

message DeleteKerberosLeaseRequest {
  string lease_id = 1;
}

message DeleteKerberosLeaseResponse {
  string lease_id = 1;
  repeated string deleted_kerberos_file_paths = 2;
}