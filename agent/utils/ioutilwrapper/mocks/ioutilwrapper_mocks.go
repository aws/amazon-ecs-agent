// Copyright 2015-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/amazon-ecs-agent/agent/utils/ioutilwrapper (interfaces: IOUtil)

package mock_ioutilwrapper

import (
	oswrapper "github.com/aws/amazon-ecs-agent/agent/utils/oswrapper"
	gomock "github.com/golang/mock/gomock"
)

// MockIOUtil is a mock of IOUtil interface
type MockIOUtil struct {
	ctrl     *gomock.Controller
	recorder *MockIOUtilMockRecorder
}

// MockIOUtilMockRecorder is the mock recorder for MockIOUtil
type MockIOUtilMockRecorder struct {
	mock *MockIOUtil
}

// NewMockIOUtil creates a new mock instance
func NewMockIOUtil(ctrl *gomock.Controller) *MockIOUtil {
	mock := &MockIOUtil{ctrl: ctrl}
	mock.recorder = &MockIOUtilMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockIOUtil) EXPECT() *MockIOUtilMockRecorder {
	return _m.recorder
}

// TempFile mocks base method
func (_m *MockIOUtil) TempFile(_param0 string, _param1 string) (oswrapper.File, error) {
	ret := _m.ctrl.Call(_m, "TempFile", _param0, _param1)
	ret0, _ := ret[0].(oswrapper.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TempFile indicates an expected call of TempFile
func (_mr *MockIOUtilMockRecorder) TempFile(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "TempFile", arg0, arg1)
}
