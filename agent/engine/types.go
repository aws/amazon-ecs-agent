// Copyright 2014-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//	http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

package engine

import (
	"fmt"
	"time"

	"github.com/aws/amazon-ecs-agent/agent/api"
)

// ContainerNotFound is a type for a missing container
type ContainerNotFound struct {
	// TaskArn is the ARN of the task the container belongs to
	TaskArn string
	// ContainerName is the name of the container that's missing
	ContainerName string
}

// Error returns an error string for the ContainerNotFound error
func (cnferror ContainerNotFound) Error() string {
	return fmt.Sprintf("Could not find container '%s' in task '%s'",
		cnferror.ContainerName, cnferror.TaskArn)
}

// DockerContainerChangeEvent is a type for container change events
type DockerContainerChangeEvent struct {
	// Status represents the container's status in the event
	Status api.ContainerStatus
	// DockerContainerMetadata is the metadata of the container in the event
	DockerContainerMetadata
}

// DockerContainerMetadata is a type for metadata about Docker containers
type DockerContainerMetadata struct {
	// DockerID is the contianer's id generated by Docker
	DockerID string
	// ExitCode contains container's exit code if it has stopped
	ExitCode *int
	// PortBindings is the list of port binding information of the container
	PortBindings []api.PortBinding
	// Error wraps vaioous container transition errors and is set if engine
	// is unable to perform any of the required container transitions
	Error engineError
	// Volumes contains volume informaton for the container
	Volumes map[string]string
	// Labels contains labels set for the container
	Labels map[string]string
	// CreatedAt is the timestamp of container creation
	CreatedAt time.Time
	// StartedAt is the timestamp of container start
	StartedAt time.Time
	// FinishedAt is the timestamp of container stop
	FinishedAt time.Time
}

// ListContainersResponse encapsulates the response from the docker client for the
// ListContainers call.
type ListContainersResponse struct {
	// DockerIDs is the list of container IDs from the ListContainers call
	DockerIDs []string
	// Error contains any error returned when listing containers
	Error error
}
