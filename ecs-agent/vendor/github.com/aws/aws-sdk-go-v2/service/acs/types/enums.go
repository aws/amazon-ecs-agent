// Code generated by smithy-go-codegen DO NOT EDIT.


package types

type AssociationType string

// Enum values for AssociationType
const (
	AssociationTypeElasticInference AssociationType = "elastic-inference"
	AssociationTypeGpu AssociationType = "gpu"
)

// Values returns all known values for AssociationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AssociationType) Values() []AssociationType {
	return []AssociationType{
		"elastic-inference",
		"gpu",
	}
}

type AuthenticationType string

// Enum values for AuthenticationType
const (
	AuthenticationTypeEcr AuthenticationType = "ecr"
	AuthenticationTypeAsm AuthenticationType = "asm"
)

// Values returns all known values for AuthenticationType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuthenticationType) Values() []AuthenticationType {
	return []AuthenticationType{
		"ecr",
		"asm",
	}
}

type AuthStrategy string

// Enum values for AuthStrategy
const (
	AuthStrategyExecutionRole AuthStrategy = "ExecutionRole"
)

// Values returns all known values for AuthStrategy. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (AuthStrategy) Values() []AuthStrategy {
	return []AuthStrategy{
		"ExecutionRole",
	}
}

type ContainerCondition string

// Enum values for ContainerCondition
const (
	ContainerConditionStart ContainerCondition = "START"
	ContainerConditionComplete ContainerCondition = "COMPLETE"
	ContainerConditionSuccess ContainerCondition = "SUCCESS"
	ContainerConditionHealthy ContainerCondition = "HEALTHY"
)

// Values returns all known values for ContainerCondition. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ContainerCondition) Values() []ContainerCondition {
	return []ContainerCondition{
		"START",
		"COMPLETE",
		"SUCCESS",
		"HEALTHY",
	}
}

type EFSAuthorizationConfigIAM string

// Enum values for EFSAuthorizationConfigIAM
const (
	EFSAuthorizationConfigIAMEnabled EFSAuthorizationConfigIAM = "ENABLED"
	EFSAuthorizationConfigIAMDisabled EFSAuthorizationConfigIAM = "DISABLED"
)

// Values returns all known values for EFSAuthorizationConfigIAM. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EFSAuthorizationConfigIAM) Values() []EFSAuthorizationConfigIAM {
	return []EFSAuthorizationConfigIAM{
		"ENABLED",
		"DISABLED",
	}
}

type EFSTransitEncryption string

// Enum values for EFSTransitEncryption
const (
	EFSTransitEncryptionEnabled EFSTransitEncryption = "ENABLED"
	EFSTransitEncryptionDisabled EFSTransitEncryption = "DISABLED"
)

// Values returns all known values for EFSTransitEncryption. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EFSTransitEncryption) Values() []EFSTransitEncryption {
	return []EFSTransitEncryption{
		"ENABLED",
		"DISABLED",
	}
}

type Encoding string

// Enum values for Encoding
const (
	EncodingIdentity Encoding = "identity"
	EncodingBase64 Encoding = "base64"
)

// Values returns all known values for Encoding. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Encoding) Values() []Encoding {
	return []Encoding{
		"identity",
		"base64",
	}
}

type EnvironmentFileType string

// Enum values for EnvironmentFileType
const (
	EnvironmentFileTypeS3 EnvironmentFileType = "s3"
)

// Values returns all known values for EnvironmentFileType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (EnvironmentFileType) Values() []EnvironmentFileType {
	return []EnvironmentFileType{
		"s3",
	}
}

type FirelensConfigurationType string

// Enum values for FirelensConfigurationType
const (
	FirelensConfigurationTypeFluentd FirelensConfigurationType = "fluentd"
	FirelensConfigurationTypeFluentbit FirelensConfigurationType = "fluentbit"
)

// Values returns all known values for FirelensConfigurationType. Note that this
// can be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (FirelensConfigurationType) Values() []FirelensConfigurationType {
	return []FirelensConfigurationType{
		"fluentd",
		"fluentbit",
	}
}

type HealthCheckType string

// Enum values for HealthCheckType
const (
	HealthCheckTypeDocker HealthCheckType = "docker"
)

// Values returns all known values for HealthCheckType. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (HealthCheckType) Values() []HealthCheckType {
	return []HealthCheckType{
		"docker",
	}
}

type ManagedAgentName string

// Enum values for ManagedAgentName
const (
	ManagedAgentNameExecuteCommandAgent ManagedAgentName = "ExecuteCommandAgent"
)

// Values returns all known values for ManagedAgentName. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ManagedAgentName) Values() []ManagedAgentName {
	return []ManagedAgentName{
		"ExecuteCommandAgent",
	}
}

type NetworkInterfaceAssociationProtocol string

// Enum values for NetworkInterfaceAssociationProtocol
const (
	NetworkInterfaceAssociationProtocolDefault NetworkInterfaceAssociationProtocol = "default"
	NetworkInterfaceAssociationProtocolTunnel NetworkInterfaceAssociationProtocol = "tunnel"
	NetworkInterfaceAssociationProtocolVeth NetworkInterfaceAssociationProtocol = "veth"
	NetworkInterfaceAssociationProtocolVlan NetworkInterfaceAssociationProtocol = "vlan"
)

// Values returns all known values for NetworkInterfaceAssociationProtocol. Note
// that this can be expanded in the future, and so it is only as up to date as the
// client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (NetworkInterfaceAssociationProtocol) Values() []NetworkInterfaceAssociationProtocol {
	return []NetworkInterfaceAssociationProtocol{
		"default",
		"tunnel",
		"veth",
		"vlan",
	}
}

type ProxyConfigurationType string

// Enum values for ProxyConfigurationType
const (
	ProxyConfigurationTypeAppmesh ProxyConfigurationType = "APPMESH"
)

// Values returns all known values for ProxyConfigurationType. Note that this can
// be expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (ProxyConfigurationType) Values() []ProxyConfigurationType {
	return []ProxyConfigurationType{
		"APPMESH",
	}
}

type RoleType string

// Enum values for RoleType
const (
	RoleTypeTaskApplication RoleType = "TaskApplication"
	RoleTypeTaskExecution RoleType = "TaskExecution"
)

// Values returns all known values for RoleType. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (RoleType) Values() []RoleType {
	return []RoleType{
		"TaskApplication",
		"TaskExecution",
	}
}

type Scope string

// Enum values for Scope
const (
	ScopeTask Scope = "task"
	ScopeShared Scope = "shared"
)

// Values returns all known values for Scope. Note that this can be expanded in
// the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (Scope) Values() []Scope {
	return []Scope{
		"task",
		"shared",
	}
}

type SecretProvider string

// Enum values for SecretProvider
const (
	SecretProviderSsm SecretProvider = "ssm"
	SecretProviderAsm SecretProvider = "asm"
)

// Values returns all known values for SecretProvider. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SecretProvider) Values() []SecretProvider {
	return []SecretProvider{
		"ssm",
		"asm",
	}
}

type SecretTarget string

// Enum values for SecretTarget
const (
	SecretTargetContainer SecretTarget = "CONTAINER"
	SecretTargetLogDriver SecretTarget = "LOG_DRIVER"
)

// Values returns all known values for SecretTarget. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SecretTarget) Values() []SecretTarget {
	return []SecretTarget{
		"CONTAINER",
		"LOG_DRIVER",
	}
}

type SecretType string

// Enum values for SecretType
const (
	SecretTypeEnvironmentVariable SecretType = "ENVIRONMENT_VARIABLE"
	SecretTypeMountPoint SecretType = "MOUNT_POINT"
	SecretTypeBootstrap SecretType = "BOOTSTRAP"
)

// Values returns all known values for SecretType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (SecretType) Values() []SecretType {
	return []SecretType{
		"ENVIRONMENT_VARIABLE",
		"MOUNT_POINT",
		"BOOTSTRAP",
	}
}

type TransportProtocol string

// Enum values for TransportProtocol
const (
	TransportProtocolTcp TransportProtocol = "tcp"
	TransportProtocolUdp TransportProtocol = "udp"
)

// Values returns all known values for TransportProtocol. Note that this can be
// expanded in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (TransportProtocol) Values() []TransportProtocol {
	return []TransportProtocol{
		"tcp",
		"udp",
	}
}

type VolumeType string

// Enum values for VolumeType
const (
	VolumeTypeHost VolumeType = "host"
	VolumeTypeDocker VolumeType = "docker"
	VolumeTypeEfs VolumeType = "efs"
	VolumeTypeFSxWindowsFileServer VolumeType = "fsxWindowsFileServer"
	VolumeTypeEbs VolumeType = "ebs"
)

// Values returns all known values for VolumeType. Note that this can be expanded
// in the future, and so it is only as up to date as the client.
//
// The ordering of this slice is not guaranteed to be stable across updates.
func (VolumeType) Values() []VolumeType {
	return []VolumeType{
		"host",
		"docker",
		"efs",
		"fsxWindowsFileServer",
		"ebs",
	}
}
