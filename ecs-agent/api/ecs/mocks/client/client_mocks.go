// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.
//

// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/amazon-ecs-agent/ecs-agent/api/ecs/client (interfaces: ECSClientFactory)

// Package mock_client is a generated GoMock package.
package mock_client

import (
	reflect "reflect"

	ecs "github.com/aws/amazon-ecs-agent/ecs-agent/api/ecs"
	credentials "github.com/aws/aws-sdk-go/aws/credentials"
	gomock "github.com/golang/mock/gomock"
)

// MockECSClientFactory is a mock of ECSClientFactory interface.
type MockECSClientFactory struct {
	ctrl     *gomock.Controller
	recorder *MockECSClientFactoryMockRecorder
}

// MockECSClientFactoryMockRecorder is the mock recorder for MockECSClientFactory.
type MockECSClientFactoryMockRecorder struct {
	mock *MockECSClientFactory
}

// NewMockECSClientFactory creates a new mock instance.
func NewMockECSClientFactory(ctrl *gomock.Controller) *MockECSClientFactory {
	mock := &MockECSClientFactory{ctrl: ctrl}
	mock.recorder = &MockECSClientFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockECSClientFactory) EXPECT() *MockECSClientFactoryMockRecorder {
	return m.recorder
}

// GetCredentials mocks base method.
func (m *MockECSClientFactory) GetCredentials() *credentials.Credentials {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCredentials")
	ret0, _ := ret[0].(*credentials.Credentials)
	return ret0
}

// GetCredentials indicates an expected call of GetCredentials.
func (mr *MockECSClientFactoryMockRecorder) GetCredentials() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCredentials", reflect.TypeOf((*MockECSClientFactory)(nil).GetCredentials))
}

// NewClient mocks base method.
func (m *MockECSClientFactory) NewClient() (ecs.ECSClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewClient")
	ret0, _ := ret[0].(ecs.ECSClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewClient indicates an expected call of NewClient.
func (mr *MockECSClientFactoryMockRecorder) NewClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewClient", reflect.TypeOf((*MockECSClientFactory)(nil).NewClient))
}
